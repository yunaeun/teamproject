{"version":3,"sources":["Components/Response.module.css","Sidebar.jsx","Footer.jsx","Components/Response.jsx","Components/Hashtag.jsx","Components/Tweet.jsx","Components/User.jsx","Pages/Tweets.jsx","Pages/About.jsx","Pages/MyPage.jsx","App.jsx","static/dummyData.js","init.js","index.js"],"names":["module","exports","Sidebar","onHashClick","className","to","onClick","Footer","Response","tweet","kind","onResponseClick","likeCount","dislikeCount","styles","Btn","event","id","style","padding","response","count","Hashtag","value","Tweet","user","onTrashClick","onTweetChange","useState","isEditable","setIsEditable","content","msg","setMsg","parsedDate","Date","createdAt","toLocaleDateString","src","picture","username","onChange","target","onKeyDown","key","onDoubleClick","match","idx","output","rgx","exec","push","slice","index","hash","lastIndex","length","renderHashtag","User","Tweets","tweets","onTweetSubmitClick","userFilter","setUserFilter","Fragment","placeholder","role","now","toISOString","name","map","filter","About","props","MyPage","me","filteredTweets","App","dummyTweets","setTweets","setHash","useEffect","lsTweets","JSON","parse","localStorage","getItem","hashTweetIds","lsHashs","hashInTweet","forEach","setItem","stringify","manageData","handleTrashClick","Number","handleResponseClick","type","currentTarget","children","classList","handleTweetChange","handleHashClick","exact","path","updatedAt","hashStates","Object","hashs","hashToLS","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b9e68e07.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Btn\":\"Response_Btn__11QEu\",\"response\":\"Response_response__1nLzB\",\"count\":\"Response_count__1YCmy\"};","import React from 'react';\nimport { Link } from 'react-router-dom';\n// TODO : React Router DOM의 Link 컴포넌트를 import 합니다.\n\nconst Sidebar = ({ onHashClick }) => {\n  const handleHashClick = () => {\n    onHashClick(\"\")\n  }\n  return (\n    <section className=\"sidebar\">\n      <Link to=\"/\" onClick={handleHashClick}><i className=\"far fa-comment-dots\"></i></Link>\n      <Link to=\"/about\"><i className=\"far fa-question-circle\"></i></Link>\n      <Link to=\"/mypage\"><i className=\"far fa-user\"></i></Link>\n    </section>\n  );\n};\n\nexport default Sidebar;\n","import React from 'react';\n\nconst Footer = () => {\n  return <footer>Copyright 2022 codestates</footer>;\n};\n\nexport default Footer;\n","import React from \"react\";\nimport styles from './Response.module.css'\n\nconst Response = ({ tweet, kind, onResponseClick }) =>{\n    const likeCount = \"fa-thumbs-up\" in tweet ? tweet[\"fa-thumbs-up\"] : 0\n\n    const dislikeCount = \"fa-thumbs-down\" in tweet ? tweet[\"fa-thumbs-down\"] : 0\n\n    const handleResponseClick = (event) => {\n        onResponseClick(event, tweet.id);\n    }\n\n    return (\n        <button className={styles.Btn} onClick={handleResponseClick}>\n            {\n                kind === \"Like\" ? \n                    <i style={{padding:\"0\"}} className={`far fa-thumbs-up ${styles.response}`}></i>\n                        :\n                    <i style={{padding:\"0\"}} className={`far fa-thumbs-down ${styles.response}`}></i>\n            }\n            <span className={styles.count}>\n            {\n                kind === \"Like\" ? \n                    likeCount\n                        :\n                    dislikeCount\n            }\n            </span>\n        </button>\n    )\n}\n\nexport default Response\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./Hashtag.css\"\n\nconst Hashtag = ({ value, onHashClick }) => {\n    const handleHashClick = () => {\n        onHashClick(value)\n    }\n    return (\n        <Link to={`/${value}`} onClick={handleHashClick}>\n            <span className=\"hashtag\">{value}</span>\n        </Link>\n    )\n}\n\nexport default Hashtag","import React, { useState } from 'react';\nimport Response from './Response';\nimport './Tweet.css';\nimport Hashtag from './Hashtag';\n\nconst Tweet = ({ tweet, user, onTrashClick, onResponseClick, onTweetChange, onHashClick }) => {\n  const [isEditable, setIsEditable] = useState(false)\n  const [msg, setMsg] = useState(tweet.content)\n  const parsedDate = new Date(tweet.createdAt).toLocaleDateString('ko-kr');\n  const handleDoubleClick = () =>{\n    if (tweet.username === user.username)\n     setIsEditable(true);\n  }\n  const handleKeyDown = (event) => {\n    if (event.key === \"Enter\")\n      setIsEditable(false);\n  }\n  const handleTweetChange = (event) => {\n    setMsg(event.target.value)\n    onTweetChange(tweet.id, msg)\n  }\n  const handleTrashClick = () => {\n    onTrashClick(tweet.id)\n  }\n  const renderHashtag = (msg) => {\n    let match;\n    let idx = 0\n    let output = []\n    let rgx = /#[가-힣0-9a-zA-Z]+/g\n    \n    while ((match = rgx.exec(msg)) != null) {\n        output.push(msg.slice(idx, match.index))\n\n        let hash = msg.slice(match.index, rgx.lastIndex)\n        output.push(<Hashtag onHashClick={onHashClick} key={idx} value={hash}/>)\n        idx = rgx.lastIndex\n    }\n    output.push(msg.slice(idx, msg.length))\n    return output\n  }\n  return (\n    <li className=\"tweet\" id={tweet.id}>\n      <div className=\"tweet__profile\">\n        <img src={tweet.picture} />\n      </div>\n      <div className=\"tweet__content\">\n        <div className=\"tweet__userInfo\">\n          <div className=\"tweet__userInfo--wrapper\">\n            <span className=\"tweet__username\">{tweet.username}</span>\n            <span className=\"tweet__createdAt\">{parsedDate}</span>\n            <span className=\"tweet__remove\" onClick={handleTrashClick}>\n              <i className=\"fas fa-trash\"></i>\n            </span>\n          </div>\n        </div>\n        {\n          !isEditable ?\n            <div\n              onDoubleClick={handleDoubleClick}\n              className=\"tweet__message\"\n            >\n              {renderHashtag(msg)}\n            </div>\n            :\n            <textarea\n              value={msg}\n              onChange={handleTweetChange}\n              onKeyDown={handleKeyDown}\n              className=\"tweet__message--edit\"\n            >\n            </textarea>\n        }\n        <div className=\"tweet__hashtags\">\n        </div>\n        <div className=\"tweet__response\">\n          <Response tweet={tweet} kind={\"Like\"} onResponseClick={onResponseClick}/>\n          <Response tweet={tweet} kind={\"Dislike\"} onResponseClick={onResponseClick}/>\n        </div>\n      </div>\n    </li>\n  );\n};\n\nexport default Tweet;\n","import React from 'react'\n\nconst User = ({ tweet }) => {\n    return (\n        <option value={tweet.username}>{tweet.username}</option>\n    )\n}\n\nexport default User;","import React, { useState } from \"react\";\nimport Footer from \"../Footer\";\nimport Tweet from \"../Components/Tweet\";\nimport User from \"../Components/User\";\nimport \"./Tweets.css\";\n\nconst Tweets = ({\n  user,\n  tweets,\n  onTweetSubmitClick,\n  onTrashClick,\n  onResponseClick,\n  onTweetChange,\n  onHashClick,\n}) => {\n  // const [username, setUsername] = useState(\"parkhacker\")\n  const [msg, setMsg] = useState(\"\");\n  const [userFilter, setUserFilter] = useState(\"\");\n\n  const handleTweetSubmitClick = () => {\n    if (msg === \"\") return;\n    const tweet = {\n      id: Date.now(),\n      username: user.username,\n      picture: user.picture,\n      content: msg,\n      createdAt: new Date().toISOString(),\n    };\n    onTweetSubmitClick(tweet);\n    setMsg(\"\");\n  };\n\n  // const handleChangeUser = (event) => {\n  //   setUsername(event.target.value)\n  // };\n\n  const handleChangeMsg = (event) => {\n    setMsg(event.target.value);\n  };\n  const handleChangeUserFilter = (event) => {\n    setUserFilter(event.target.value);\n  };\n  return (\n    <React.Fragment>\n      <div className=\"tweetForm__container\">\n        <div className=\"tweetForm__wrapper\">\n          <div className=\"tweetForm__profile\">\n            <img src={user.picture} />\n          </div>\n          <div className=\"tweetForm__inputContainer\">\n            <div className=\"tweetForm__inputWrapper\">\n              <div className=\"tweetForm__input\">\n                <div\n                  // type=\"text\"\n                  // placeholder=\"your username here..\"\n                  // onChange={handleChangeUser}\n                  className=\"tweetForm__input--username\"\n                >\n                  {user.username}\n                </div>\n                <textarea\n                  placeholder=\"you message here..\"\n                  value={msg}\n                  onChange={handleChangeMsg}\n                  className=\"tweetForm__input--message\"\n                />\n              </div>\n              <div className=\"tweetForm__count\" role=\"status\">\n                <span className=\"tweetForm__count__text\">\n                  total: {tweets.length}\n                </span>\n              </div>\n            </div>\n            <div className=\"tweetForm__submit\">\n              <div className=\"tweetForm__submitIcon\"></div>\n              <button\n                onClick={handleTweetSubmitClick}\n                className=\"tweetForm__submitButton\"\n              >\n                Tweet\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className=\"tweet__selectUser\">\n        <select\n          name=\"user\"\n          value={userFilter}\n          onChange={handleChangeUserFilter}\n        >\n          <option value=\"\">\"click to filter tweets by username\"</option>\n          {tweets.map((tweet) => (\n            <User key={tweet.id} tweet={tweet} />\n          ))}\n        </select>\n      </div>\n      <ul className=\"tweets\">\n        {userFilter === \"\"\n          ? tweets.map((tweet) => (\n              <Tweet\n                key={tweet.id}\n                tweet={tweet}\n                user={user}\n                onTrashClick={onTrashClick}\n                onResponseClick={onResponseClick}\n                onTweetChange={onTweetChange}\n                onHashClick={onHashClick}\n              />\n            ))\n          : tweets\n              .filter((tweet) => tweet.username === userFilter)\n              .map((tweet) => (\n                <Tweet\n                  key={tweet.id}\n                  tweet={tweet}\n                  user={user}\n                  onTrashClick={onTrashClick}\n                  onResponseClick={onResponseClick}\n                  onTweetChange={onTweetChange}\n                  onHashClick={onHashClick}\n                />\n              ))}\n      </ul>\n      <Footer />\n    </React.Fragment>\n  );\n};\n\nexport default Tweets;\n","import React from 'react';\nimport Footer from '../Footer';\nimport './About.css';\n\nconst About = (props) => {\n  return (\n    <section className=\"aboutTwittler\">\n      <div className=\"aboutTwittler__container\">\n        <div className=\"aboutTwittler__wrapper\">\n          <div className=\"aboutTwittler__detail\">\n            <p className=\"aboutTwittler__detailName\">React Twittler Info</p>\n          </div>\n        </div>\n      </div>\n      <div className=\"aboutTwittler__content\">\n        <i className=\"fas fa-users\"></i>\n        <p>나만의 Twittler 소개페이지를 꾸며보세요.</p>\n      </div>\n      <Footer />\n    </section>\n  );\n};\n\nexport default About;\n","import React from \"react\";\nimport Footer from \"../Footer\";\nimport Tweet from \"../Components/Tweet\";\nimport \"./MyPage.css\";\n\nconst MyPage = ({ me, tweets, onTrashClick, onHashClick }) => {\n  const filteredTweets = tweets.filter(\n    (tweet) => tweet.username === me.username\n  );\n  return (\n    <section className=\"myInfo\">\n      <div className=\"myInfo__container\">\n        <div className=\"myInfo__wrapper\">\n          <div className=\"myInfo__profile\">\n            <img src={me.picture} />\n          </div>\n          <div className=\"myInfo__detail\">\n            <p className=\"myInfo__detailName\">{me.username} Profile</p>\n            <p>28 팔로워 100 팔로잉</p>\n          </div>\n        </div>\n      </div>\n      <ul className=\"tweets__mypage\">\n        {filteredTweets.map((tweet) => (\n          <Tweet\n            tweet={tweet}\n            key={tweet.id}\n            onHashClick={onHashClick}\n            onTrashClick={onTrashClick}\n          />\n        ))}\n      </ul>\n      <Footer />\n    </section>\n  );\n};\n\nexport default MyPage;\n","import React, { useEffect, useState } from 'react';\nimport { Route, Switch } from 'react-router-dom';\n\nimport Sidebar from './Sidebar';\nimport Tweets from './Pages/Tweets';\nimport About from './Pages/About';\nimport MyPage from './Pages/MyPage';\n\nimport './App.css';\n\nconst App = ({ dummyTweets, user }) => {\n  const [tweets, setTweets] = useState(dummyTweets)\n  const [hash, setHash] = useState(\"\")\n  useEffect(() => {\n    let lsTweets = JSON.parse(localStorage.getItem(\"tweets\"))\n    if (hash === \"\") {\n      setTweets(lsTweets)\n      return\n    }\n    let hashTweetIds = JSON.parse(localStorage.getItem(\"hashs\"))[hash]\n    setTweets(() => {\n      return hashTweetIds.map(id => {\n        return lsTweets.filter(tweet => tweet.id === id)[0] // ineffiency..\n      })\n    })\n  }, [hash])\n\n  const manageData = (tweet) => {\n    let rgx = /#[가-힣0-9a-zA-Z]+/g\n    let lsTweets = JSON.parse(localStorage.getItem(\"tweets\"))\n    let lsHashs = JSON.parse(localStorage.getItem(\"hashs\"))\n    let hashInTweet = tweet.content.match(rgx)\n    lsTweets = [tweet, ...lsTweets]\n    if (hashInTweet !== null) {\n      hashInTweet.forEach(hash => {\n        if (!(hash in lsHashs)) {\n          lsHashs[hash] = []\n        }\n        lsHashs[hash].push(tweet.id)\n      })\n    }\n    localStorage.setItem(\"tweets\", JSON.stringify(lsTweets))\n    localStorage.setItem(\"hashs\", JSON.stringify(lsHashs))\n  }\n\n  const onTweetSubmitClick = (tweet) => {\n    setTweets(tweets => {\n      return [\n        tweet,\n        ...tweets\n      ]\n    })\n    manageData(tweet)\n  }\n  const handleTrashClick = (id) => {\n    setTweets(tweets => {\n      return tweets.filter(tweet => tweet.id !== Number(id))\n    })\n  }\n  const handleResponseClick = (event, id) => {\n    let currTarget = event.currentTarget\n    let type = currTarget.children[0].classList[1]\n\n    setTweets(tweets => {\n      return tweets.map(tweet => {\n        if (tweet.id !== Number(id)) {\n          return tweet\n        } else {\n          if (!(type in tweet)) {\n            tweet[type] = 0\n          }\n          tweet[type] = tweet[type] + 1\n          return tweet\n        }\n      })\n    })\n  }\n\n  const handleTweetChange = (id, msg) => {\n    setTweets(tweets => {\n      return tweets.map(tweet => {\n        if (tweet.id === Number(id)) {\n          tweet[\"content\"] = msg\n          return tweet;\n        } else {\n          return tweet\n        }\n      })\n    })\n  }\n  const handleHashClick = (hash) => {\n    setHash(hash)\n  }\n\n  return (\n    <div className=\"App\">\n      <main>\n        <Sidebar onHashClick={handleHashClick}/>\n        <section className=\"features\">\n        <Switch>\n          <Route exact path=\"/\">\n            <Tweets \n              user={user}\n              tweets={tweets}\n              onTweetSubmitClick={onTweetSubmitClick}\n              onTrashClick={handleTrashClick}\n              onResponseClick={handleResponseClick}\n              onTweetChange={handleTweetChange}\n              onHashClick={handleHashClick}\n            />\n          </Route>\n          <Route exact path={`/${hash}`}>\n            <Tweets \n                user={user}\n                tweets={tweets}\n                onTweetSubmitClick={onTweetSubmitClick}\n                onTrashClick={handleTrashClick}\n                onResponseClick={handleResponseClick}\n                onTweetChange={handleTweetChange}\n                onHashClick={handleHashClick}\n            />\n          </Route>\n          <Route path=\"/about\">\n            <About />\n          </Route>\n          <Route path=\"/mypage\">\n            <MyPage\n              me={user}\n              tweets={tweets}\n              onTrashClick={handleTrashClick}\n              onHashClick={handleHashClick}\n            />\n          </Route>\n        </Switch>\n        </section>\n      </main>\n    </div>\n  );\n};\n\n// ! 아래 코드는 수정하지 않습니다.\nexport default App;\n","const getRandomNumber = (min, max) => {\n  return parseInt(Math.random() * (Number(max) - Number(min) + 2));\n};\n\nconst dummyTweets = [\n  {\n    id: 1,\n    username: \"I'm from 실리콘밸리\",\n    picture: `https://www.culture.go.kr/upload/editor_upload/2020/01/2001060314.jpg`,\n    content: \"ㅋㅋ구라지롱따!#구라#지롱#김구라#팬아님 #로얄가우스 #수학영재\",\n    createdAt: \"2019-02-24T16:17:47.000Z\",\n    updatedAt: \"2019-02-24T16:17:47.000Z\",\n  },\n  {\n    id: 2,\n    username: \"hongncs\",\n    picture: `https://blog.kakaocdn.net/dn/c37JpB/btq7oHTCM3d/dK4xgKwXTPTPF62LKHXA0K/img.jpg`,\n    content: \"니네 ncs가 밥으로 보여??!?!?!?!??!?!?! #밥은 #쿠쿠 #하세요\",\n    createdAt: \"2019-02-25T16:17:47.000Z\",\n    updatedAt: \"2019-02-25T16:17:47.000Z\",\n  },\n  {\n    id: 3,\n    username: \"choidesign\",\n    picture: `https://avatars.githubusercontent.com/u/80656696?v=4.jpg`,\n    content: \"집가고 싶다 #집 #집가 #집은한자로집가\",\n    createdAt: \"2019-02-26T16:17:47.000Z\",\n    updatedAt: \"2019-02-26T16:17:47.000Z\",\n  },\n];\n\nexport default dummyTweets;\n","import dummyTweets from './static/dummyData';\n\n// to store array in local storage use JSON.stringify\n// to return array from local storage use JSON.parse\n/**\n * ! Tweet State\n * key: \"tweets\"\n * value:\n * [{\n *      id:\n *      username:\n *      picture:\n *      content:\n *      createdAt:\n *      updatedAt:\n * }...] \n * */ \nconst dummyTweetToLS = () => {\n    localStorage.setItem(\"tweets\", JSON.stringify(dummyTweets))\n}\n/**\n * ! Hash State\n * key: \"hashs\"\n * value: \n * {\n *      \"hash1\": [id...],\n *      ...\n * }\n */\nconst hashToLS = () => {\n    let rgx = /#[가-힣0-9a-zA-Z]+/g\n    let hashStates = new Object()\n    dummyTweets.forEach(tweets => {\n        let hashs = tweets.content.match(rgx)\n        for (let hash of hashs) {\n            if (!(hash in hashStates)) {\n                hashStates[hash] = []\n            }\n            hashStates[hash].push(tweets.id)\n        }\n    })\n    localStorage.setItem(\"hashs\", JSON.stringify(hashStates))\n}\n\nexport { dummyTweetToLS, hashToLS } ","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport App from \"./App\";\nimport { dummyTweetToLS, hashToLS } from \"./init\";\n\nconst User = {\n  username: \"jjanghyerin\",\n  picture:\n    \"https://i.pinimg.com/474x/9c/0c/ef/9c0cef0f4c7ca6ba83f91f3a423d8049.jpg\",\n};\n\ndummyTweetToLS();\nhashToLS();\nconst dummyTweets = JSON.parse(localStorage.getItem(\"tweets\"));\n\nReactDOM.render(\n  <Router>\n    <App dummyTweets={dummyTweets} user={User} />\n  </Router>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}